services:
  elastic:
    container_name: prod_elastic
    hostname: elastic
    networks:
      - servers
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.2
      #https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
      - xpack.security.enabled=false
        #set no more than half of allocated memory
        #https://www.elastic.co/guide/en/elasticsearch/reference/current/advanced-configuration.html#set-jvm-options
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - $ELASTIC_DATA_DIR:/usr/share/elasticsearch/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          #cpus: '4.0'
          memory: 12g
  kibana:
    depends_on:
      - elastic
    container_name: prod_kibana
    hostname: kibana
    networks:
      - servers
    image: docker.elastic.co/kibana/kibana:8.4.2
    #build:
      #context: ./app/elk/kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elastic:9200
      - SERVER_NAME="NETENG"
    volumes:
      - ${KIBANA_DATA_DIR}:/usr/share/kibana/data
    ports:
      - $SRV_SWAG_PROXY:$KIBANA_H_PORT:5601
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4g
  fb_netflow:
    depends_on:
      - elastic
    container_name: prod_fb_netflow
    hostname: fb_netflow
    networks:
      - servers
    build:
      context: ./app/elk/filebeat/netflow
      #may have to restrict fb.yml to read only on host
    ports:
      - $SRV_IP_1:$FB_NETFLOW_PORT:$FB_NETFLOW_PORT/udp
    volumes:
      - $FB_NETFLOW_DATA_DIR:/usr/share/filebeat/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m